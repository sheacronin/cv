{"version":3,"sources":["components/Field.js","components/SubmitButton.js","components/EditButton.js","hooks/useEditable.js","hooks/useField.js","components/Information.js","components/Profile.js","i/delete-icon.svg","components/DeleteButton.js","components/Bullet.js","hooks/useItemsList.js","components/Experience.js","components/Skills.js","components/Education.js","components/Activities.js","App.js","index.js"],"names":["Field","props","isEditable","value","handleChange","attribute","isMultiline","className","aria-hidden","onChange","type","SubmitButton","onClick","EditButton","useEditable","useState","setIsEditable","prevState","useField","initValue","field","setField","e","target","Information","handleEditClick","name","email","phoneNumber","id","Profile","blurb","DeleteButton","src","deleteIcon","alt","Bullet","item","handleDeleteClick","text","useItemsList","itemFactory","numberOfItems","initItems","push","useReducer","state","action","newItems","changingItem","find","console","log","attr","deleteIndex","findIndex","splice","jobFactory","title","employer","location","startDate","endDate","uniqid","bulletFactory","Job","bullets","dispatch","map","bullet","Experience","jobs","job","skillFactory","Skills","skills","skill","schoolFactory","institution","gradDate","degree","School","Education","schools","school","activityFactory","Activities","activities","activity","CV","isPrintMode","this","undefined","Component","App","componentRef","useRef","setIsPrintMode","ref","trigger","content","current","pageStyle","onBeforeGetContent","Promise","resolve","onAfterPrint","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b18decc.chunk.js","sourcesContent":["import React from 'react';\nimport '../styles/Field.css';\n\nfunction Field(props) {\n    const { isEditable, value, handleChange, attribute, isMultiline } = props;\n\n    if (isEditable) {\n        return (\n            <div className=\"input-wrapper\">\n                {/* Add span w/ value to make input width dynamic */}\n                <span className={attribute} aria-hidden=\"true\">\n                    {value}\n                </span>\n                {isMultiline ? (\n                    <textarea\n                        className={attribute}\n                        value={value}\n                        onChange={handleChange}\n                    />\n                ) : (\n                    <input\n                        className={attribute}\n                        type=\"text\"\n                        value={value}\n                        onChange={handleChange}\n                    />\n                )}\n            </div>\n        );\n    } else {\n        return <span className={attribute}>{value}</span>;\n    }\n}\n\nexport default Field;\n","import React from 'react';\n\nconst SubmitButton = (props) => {\n    const { onClick } = props;\n    return (\n        <button onClick={onClick} className=\"edit-submit-btn\">\n            Submit\n        </button>\n    );\n};\n\nexport default SubmitButton;\n","import React from 'react';\nimport '../styles/EditButton.css';\n\nconst EditButton = (props) => {\n    const { onClick } = props;\n    return (\n        <button onClick={onClick} className=\"edit-submit-btn\">\n            Edit\n        </button>\n    );\n};\n\nexport default EditButton;\n","import { useState } from 'react';\n\n// Custom hook for edit button.\nfunction useEditable() {\n    const [isEditable, setIsEditable] = useState(false);\n\n    function handleClick() {\n        setIsEditable((prevState) => !prevState);\n    }\n\n    return [isEditable, handleClick];\n}\n\nexport default useEditable;\n","import { useState } from 'react';\n\n// Custom hook for single field.\nfunction useField(initValue) {\n    const [field, setField] = useState(initValue);\n\n    function handleFieldChange(e) {\n        setField(e.target.value);\n    }\n    return { value: field, handleChange: handleFieldChange };\n}\n\nexport default useField;\n","import React from 'react';\nimport '../styles/Information.css';\nimport Field from './Field';\nimport SubmitButton from './SubmitButton';\nimport EditButton from './EditButton';\nimport useEditable from '../hooks/useEditable';\nimport useField from '../hooks/useField';\n\nfunction Information() {\n    const [isEditable, handleEditClick] = useEditable();\n    const name = useField('First Last');\n    const email = useField('firstlast@example.com');\n    const phoneNumber = useField('123-456-7890');\n\n    return (\n        <section id=\"information\">\n            <h1>\n                <Field\n                    attribute=\"name\"\n                    value={name.value}\n                    isEditable={isEditable}\n                    handleChange={name.handleChange}\n                />\n            </h1>\n            {isEditable ? (\n                <SubmitButton onClick={handleEditClick} />\n            ) : (\n                <EditButton onClick={handleEditClick} />\n            )}\n            <div>\n                <Field\n                    attribute=\"email\"\n                    value={email.value}\n                    isEditable={isEditable}\n                    handleChange={email.handleChange}\n                />\n                {' | '}\n                <Field\n                    attribute=\"phoneNumber\"\n                    value={phoneNumber.value}\n                    isEditable={isEditable}\n                    handleChange={phoneNumber.handleChange}\n                />\n            </div>\n            <hr />\n        </section>\n    );\n}\n\nexport default Information;\n","import React from 'react';\nimport EditButton from './EditButton';\nimport SubmitButton from './SubmitButton';\nimport '../styles/Profile.css';\nimport Field from './Field';\nimport useField from '../hooks/useField';\nimport useEditable from '../hooks/useEditable';\n\nfunction Profile() {\n    const [isEditable, handleEditClick] = useEditable();\n\n    const blurb = useField(\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris vestibulum bibendum enim et viverra. Quisque massa augue, ullamcorper nec ultricies ut, efficitur et diam. Etiam commodo est eget risus posuere euismod. Mauris a augue vel mi volutpat congue. Vivamus placerat aliquet ultrices. '\n    );\n\n    return (\n        <section id=\"profile\">\n            <h2>Profile</h2>\n            {isEditable ? (\n                <SubmitButton onClick={handleEditClick} />\n            ) : (\n                <EditButton onClick={handleEditClick} />\n            )}\n            <Field\n                isEditable={isEditable}\n                value={blurb.value}\n                handleChange={blurb.handleChange}\n                isMultiline={true}\n            />\n            <hr />\n        </section>\n    );\n}\n\nexport default Profile;\n","export default __webpack_public_path__ + \"static/media/delete-icon.b7053875.svg\";","import React from 'react';\nimport '../styles/DeleteButton.css';\nimport deleteIcon from '../i/delete-icon.svg';\n\nconst DeleteButton = (props) => {\n    const { onClick } = props;\n    return (\n        <button onClick={onClick} className=\"delete-btn\">\n            <img src={deleteIcon} alt=\"Delete icon\" />\n        </button>\n    );\n};\n\nexport default DeleteButton;\n","import React from 'react';\nimport '../styles/Skills.css';\nimport DeleteButton from './DeleteButton';\nimport Field from './Field';\n\nfunction Bullet(props) {\n    const { isEditable, item, handleChange, handleDeleteClick, isMultiline } =\n        props;\n\n    return (\n        <li className=\"bullet\">\n            {isEditable && <DeleteButton onClick={handleDeleteClick} />}\n            <Field\n                isEditable={isEditable}\n                value={item.text}\n                handleChange={handleChange}\n                attribute={'text'}\n                isMultiline={isMultiline}\n            />\n        </li>\n    );\n}\n\nexport default Bullet;\n","import { useReducer } from 'react';\n\nfunction useItemsList(itemFactory, numberOfItems) {\n    function itemsReducer(state, action) {\n        // Make a copy of items array.\n        const newItems = [...state];\n\n        switch (action.type) {\n            case 'edit':\n                // Find the item to change.\n                const changingItem = newItems.find(\n                    (item) => item.id === action.id\n                );\n                console.log(changingItem);\n                // Update the item's changing attribute with the new value.\n                changingItem[action.attr] = action.value;\n                return newItems;\n            case 'add':\n                return [...state, itemFactory()];\n            case 'delete':\n                const deleteIndex = newItems.findIndex(\n                    (item) => item.id === action.id\n                );\n                // Mutate array copy by deleting selected skill.\n                newItems.splice(deleteIndex, 1);\n                return newItems;\n            default:\n                return state;\n        }\n    }\n\n    const initItems = [];\n    while (numberOfItems > 0) {\n        initItems.push(itemFactory());\n        numberOfItems--;\n    }\n\n    return useReducer(itemsReducer, initItems);\n}\n\nexport default useItemsList;\n","import React from 'react';\nimport '../styles/Experience.css';\nimport DeleteButton from './DeleteButton';\nimport Field from './Field';\nimport uniqid from 'uniqid';\nimport Bullet from './Bullet';\nimport EditButton from './EditButton';\nimport SubmitButton from './SubmitButton';\nimport useEditable from '../hooks/useEditable';\nimport useItemsList from '../hooks/useItemsList';\n\nconst jobFactory = () => {\n    return {\n        title: 'Job Title',\n        employer: 'Employer',\n        location: 'City, State',\n        startDate: 'Start Date',\n        endDate: 'Present',\n        id: uniqid(),\n    };\n};\n\nfunction Experience() {\n    const [isEditable, handleEditClick] = useEditable();\n\n    const [jobs, dispatch] = useItemsList(jobFactory, 2);\n\n    return (\n        <section id=\"experience\">\n            <h2>Experience</h2>\n            {isEditable ? (\n                <SubmitButton onClick={handleEditClick} />\n            ) : (\n                <EditButton onClick={handleEditClick} />\n            )}\n            {jobs.map((job) => (\n                <Job\n                    key={job.id}\n                    isEditable={isEditable}\n                    item={job}\n                    handleChange={(e) =>\n                        dispatch({\n                            type: 'edit',\n                            id: job.id,\n                            value: e.target.value,\n                            // Use class name because attr\n                            // is listed there.\n                            attr: e.target.className,\n                        })\n                    }\n                    handleDeleteClick={() =>\n                        dispatch({ type: 'delete', id: job.id })\n                    }\n                />\n            ))}\n            {isEditable && (\n                <button\n                    className=\"new-item-btn\"\n                    onClick={() => dispatch({ type: 'add' })}\n                >\n                    +\n                </button>\n            )}\n            <hr />\n        </section>\n    );\n}\n\nconst bulletFactory = () => {\n    return {\n        text: 'Bullet Point',\n        id: uniqid(),\n    };\n};\n\nfunction Job(props) {\n    const { item, isEditable, handleChange, handleDeleteClick } = props;\n\n    const [bullets, dispatch] = useItemsList(bulletFactory, 3);\n\n    return (\n        <article className=\"job\">\n            {isEditable && <DeleteButton onClick={handleDeleteClick} />}\n            <h3>\n                <Field\n                    isEditable={isEditable}\n                    value={item.employer}\n                    handleChange={handleChange}\n                    attribute={'employer'}\n                />\n                {', '}\n                <Field\n                    isEditable={isEditable}\n                    value={item.location}\n                    handleChange={handleChange}\n                    attribute={'location'}\n                />\n            </h3>\n            <h4>\n                <Field\n                    isEditable={isEditable}\n                    value={item.title}\n                    handleChange={handleChange}\n                    attribute={'title'}\n                />\n            </h4>\n            <div className=\"dates\">\n                <Field\n                    isEditable={isEditable}\n                    value={item.startDate}\n                    handleChange={handleChange}\n                    attribute={'startDate'}\n                />\n                -\n                <Field\n                    isEditable={isEditable}\n                    value={item.endDate}\n                    handleChange={handleChange}\n                    attribute={'endDate'}\n                />\n            </div>\n            <ul>\n                {bullets.map((bullet) => (\n                    <Bullet\n                        key={bullet.id}\n                        isEditable={isEditable}\n                        item={bullet}\n                        handleChange={(e) =>\n                            dispatch({\n                                type: 'edit',\n                                id: bullet.id,\n                                value: e.target.value,\n                                attr: 'text',\n                            })\n                        }\n                        handleDeleteClick={() =>\n                            dispatch({ type: 'delete', id: bullet.id })\n                        }\n                        isMultiline={true}\n                    />\n                ))}\n            </ul>\n            {isEditable && (\n                <button\n                    className=\"new-item-btn\"\n                    onClick={() => dispatch({ type: 'add' })}\n                >\n                    +\n                </button>\n            )}\n        </article>\n    );\n}\n\nexport default Experience;\n","import React from 'react';\nimport '../styles/Skills.css';\nimport uniqid from 'uniqid';\nimport Bullet from './Bullet';\nimport EditButton from './EditButton';\nimport SubmitButton from './SubmitButton';\nimport useEditable from '../hooks/useEditable';\nimport useItemsList from '../hooks/useItemsList';\n\nconst skillFactory = () => {\n    return {\n        text: 'Skill',\n        id: uniqid(),\n    };\n};\n\nfunction Skills() {\n    const [isEditable, handleEditClick] = useEditable();\n\n    const [skills, dispatch] = useItemsList(skillFactory, 6);\n\n    return (\n        <section id=\"skills\">\n            <h2>Skills</h2>\n            {isEditable ? (\n                <SubmitButton onClick={handleEditClick} />\n            ) : (\n                <EditButton onClick={handleEditClick} />\n            )}\n            <ul>\n                {skills.map((skill) => (\n                    <Bullet\n                        key={skill.id}\n                        isEditable={isEditable}\n                        item={skill}\n                        handleChange={(e) =>\n                            dispatch({\n                                type: 'edit',\n                                id: skill.id,\n                                value: e.target.value,\n                                attr: 'text',\n                            })\n                        }\n                        handleDeleteClick={() =>\n                            dispatch({ type: 'delete', id: skill.id })\n                        }\n                        isMultiline={false}\n                    />\n                ))}\n            </ul>\n            {isEditable && (\n                <button\n                    className=\"new-item-btn\"\n                    onClick={() => dispatch({ type: 'add' })}\n                >\n                    +\n                </button>\n            )}\n            <hr />\n        </section>\n    );\n}\n\nexport default Skills;\n","import React from 'react';\nimport '../styles/Education.css';\nimport DeleteButton from './DeleteButton';\nimport Field from './Field';\nimport uniqid from 'uniqid';\nimport EditButton from './EditButton';\nimport SubmitButton from './SubmitButton';\nimport useEditable from '../hooks/useEditable';\nimport useItemsList from '../hooks/useItemsList';\n\nfunction schoolFactory() {\n    return {\n        institution: 'Institution',\n        gradDate: 'May 20XX',\n        location: 'City, State',\n        degree: 'B.X. in [ Major ]',\n        id: uniqid(),\n    };\n}\n\nfunction Education() {\n    const [isEditable, handleEditClick] = useEditable();\n\n    const [schools, dispatch] = useItemsList(schoolFactory, 1);\n\n    return (\n        <section id=\"education\">\n            <h2>Education</h2>\n            {isEditable ? (\n                <SubmitButton onClick={handleEditClick} />\n            ) : (\n                <EditButton onClick={handleEditClick} />\n            )}\n            {schools.map((school) => (\n                <School\n                    key={school.id}\n                    isEditable={isEditable}\n                    item={school}\n                    handleChange={(e) =>\n                        dispatch({\n                            type: 'edit',\n                            id: school.id,\n                            value: e.target.value,\n                            // Use class name because attr\n                            // is listed there.\n                            attr: e.target.className,\n                        })\n                    }\n                    handleDeleteClick={() =>\n                        dispatch({ type: 'delete', id: school.id })\n                    }\n                />\n            ))}\n            {isEditable && (\n                <button\n                    className=\"new-item-btn\"\n                    onClick={() => dispatch({ type: 'add' })}\n                >\n                    +\n                </button>\n            )}\n            <hr />\n        </section>\n    );\n}\n\nfunction School(props) {\n    const { item, isEditable, handleChange, handleDeleteClick } = props;\n\n    return (\n        <article className=\"school\">\n            {isEditable && <DeleteButton onClick={handleDeleteClick} />}\n            <h3>\n                <Field\n                    isEditable={isEditable}\n                    value={item.institution}\n                    handleChange={handleChange}\n                    attribute={'institution'}\n                />\n                {', '}\n                <Field\n                    isEditable={isEditable}\n                    value={item.location}\n                    handleChange={handleChange}\n                    attribute={'location'}\n                />\n            </h3>\n            <Field\n                isEditable={isEditable}\n                value={item.degree}\n                handleChange={handleChange}\n                attribute={'degree'}\n            />\n            <div className=\"dates\">\n                <Field\n                    isEditable={isEditable}\n                    value={item.gradDate}\n                    handleChange={handleChange}\n                    attribute={'gradDate'}\n                />\n            </div>\n        </article>\n    );\n}\n\nexport default Education;\n","import React from 'react';\nimport uniqid from 'uniqid';\nimport Bullet from './Bullet';\nimport useItemsList from '../hooks/useItemsList';\nimport useEditable from '../hooks/useEditable';\nimport SubmitButton from './SubmitButton';\nimport EditButton from './EditButton';\n\nconst activityFactory = () => {\n    return {\n        text: 'Activity',\n        id: uniqid(),\n    };\n};\n\nfunction Activities() {\n    const [isEditable, handleEditClick] = useEditable();\n    const [activities, dispatch] = useItemsList(activityFactory, 2);\n\n    return (\n        <section id=\"activities\">\n            <h2>Activities</h2>\n            {isEditable ? (\n                <SubmitButton onClick={handleEditClick} />\n            ) : (\n                <EditButton onClick={handleEditClick} />\n            )}\n            <ul>\n                {activities.map((activity) => (\n                    <Bullet\n                        key={activity.id}\n                        isEditable={isEditable}\n                        item={activity}\n                        handleChange={(e) =>\n                            dispatch({\n                                type: 'edit',\n                                id: activity.id,\n                                value: e.target.value,\n                                attr: 'text',\n                            })\n                        }\n                        handleDeleteClick={() =>\n                            dispatch({ type: 'delete', id: activity.id })\n                        }\n                        isMultiline={false}\n                    />\n                ))}\n            </ul>\n            {isEditable && (\n                <button\n                    className=\"new-item-btn\"\n                    onClick={() => dispatch({ type: 'add' })}\n                >\n                    +\n                </button>\n            )}\n        </section>\n    );\n}\n\nexport default Activities;\n","import './App.css';\nimport React, { Component, useRef, useState } from 'react';\nimport Information from './components/Information';\nimport Profile from './components/Profile';\nimport Experience from './components/Experience';\nimport Skills from './components/Skills';\nimport Education from './components/Education';\nimport Activities from './components/Activities';\nimport ReactToPrint from 'react-to-print';\n\nclass CV extends Component {\n    render() {\n        const { isPrintMode } = this.props;\n        return (\n            <main className={isPrintMode ? 'pdf' : undefined}>\n                <Information />\n                <Profile />\n                <Skills />\n                <Experience />\n                <Education />\n                <Activities />\n            </main>\n        );\n    }\n}\n\nfunction App() {\n    const componentRef = useRef();\n    const [isPrintMode, setIsPrintMode] = useState(false);\n\n    return (\n        <div>\n            <CV ref={componentRef} isPrintMode={isPrintMode} />\n            <ReactToPrint\n                trigger={() => <button id=\"print-btn\">Print!</button>}\n                content={() => componentRef.current}\n                pageStyle=\"@page {margin: -1.5cm}\"\n                onBeforeGetContent={() => {\n                    return new Promise((resolve) => {\n                        setIsPrintMode(true);\n                        resolve();\n                    });\n                }}\n                onAfterPrint={() => setIsPrintMode(false)}\n            />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}